const e=JSON.parse(`{"key":"v-3f98b3c8","path":"/database/pgsql/learning/3.4%20Transactions.html","title":"3.4 事务","lang":"zh-CN","frontmatter":{"title":"3.4 事务","icon":"pen-to-square","order":1,"author":"LiuSongLing","date":"2024-12-24T00:00:00.000Z","category":["pgsql"],"tag":["pgsql"],"sticky":false,"star":false,"description":"事务是所有数据库系统的基本概念。 事务的要点是它将多个步骤捆绑到一个全有或全无的操作中。 步骤之间的中间状态对其他并发事务不可见，如果发生阻止事务完成的故障，则任何步骤都不会影响数据库。 事务必须是全有或全无的，不仅要对数据库产生永久影响，还要约束它们发生的可见性。 当多个事务并发运行时，每个事务都不应看到其他事务所做的不完整更改（事务之间不可见）。 在 PostgreSQL 中，事务是通过用 BEGIN 和 COMMIT 命令将事务的 SQL 命令括起来来设置的。所以我们的银行交易实际上看起来像： BEGIN; UPDATE accounts SET balance = balance - 100.00 WHERE name = 'Alice'; -- etc etc COMMIT;","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/database/pgsql/learning/3.4%20Transactions.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"3.4 事务"}],["meta",{"property":"og:description","content":"事务是所有数据库系统的基本概念。 事务的要点是它将多个步骤捆绑到一个全有或全无的操作中。 步骤之间的中间状态对其他并发事务不可见，如果发生阻止事务完成的故障，则任何步骤都不会影响数据库。 事务必须是全有或全无的，不仅要对数据库产生永久影响，还要约束它们发生的可见性。 当多个事务并发运行时，每个事务都不应看到其他事务所做的不完整更改（事务之间不可见）。 在 PostgreSQL 中，事务是通过用 BEGIN 和 COMMIT 命令将事务的 SQL 命令括起来来设置的。所以我们的银行交易实际上看起来像： BEGIN; UPDATE accounts SET balance = balance - 100.00 WHERE name = 'Alice'; -- etc etc COMMIT;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-25T09:24:59.000Z"}],["meta",{"property":"article:author","content":"LiuSongLing"}],["meta",{"property":"article:tag","content":"pgsql"}],["meta",{"property":"article:published_time","content":"2024-12-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-25T09:24:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"3.4 事务\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-12-24T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-25T09:24:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LiuSongLing\\"}]}"]]},"headers":[],"git":{"createdTime":1735118699000,"updatedTime":1735118699000,"contributors":[{"name":"liusongling","email":"15879144378@163.com","commits":1}]},"readingTime":{"minutes":2.1,"words":629},"filePathRelative":"database/pgsql/learning/3.4 Transactions.md","localizedDate":"2024年12月24日","excerpt":"<p>事务是所有数据库系统的基本概念。</p>\\n<p>事务的要点是它将多个步骤捆绑到一个全有或全无的操作中。</p>\\n<p>步骤之间的中间状态对其他并发事务不可见，如果发生阻止事务完成的故障，则任何步骤都不会影响数据库。</p>\\n<p>事务必须是全有或全无的，不仅要对数据库产生永久影响，还要约束它们发生的可见性。</p>\\n<p>当多个事务并发运行时，每个事务都不应看到其他事务所做的不完整更改（事务之间不可见）。</p>\\n<p>在 PostgreSQL 中，事务是通过用 BEGIN 和 COMMIT 命令将事务的 SQL 命令括起来来设置的。所以我们的银行交易实际上看起来像：</p>\\n<div class=\\"language-sql line-numbers-mode\\" data-ext=\\"sql\\"><pre class=\\"language-sql\\"><code><span class=\\"token keyword\\">BEGIN</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">UPDATE</span> accounts <span class=\\"token keyword\\">SET</span> balance <span class=\\"token operator\\">=</span> balance <span class=\\"token operator\\">-</span> <span class=\\"token number\\">100.00</span>\\n    <span class=\\"token keyword\\">WHERE</span> name <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'Alice'</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">-- etc etc</span>\\n<span class=\\"token keyword\\">COMMIT</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
