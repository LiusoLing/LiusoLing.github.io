const t=JSON.parse('{"key":"v-198f851a","path":"/javaer/base/%E4%B8%80%E3%80%81Java%E5%9F%BA%E7%A1%80/7.Java%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E6%B5%81/09%20java%20formatting%20output%20or%20printf.html","title":"09. 格式化输出","lang":"zh-CN","frontmatter":{"title":"09. 格式化输出","icon":"pen-to-square","order":9,"author":"LiuSongLing","date":"2025-01-05T00:00:00.000Z","category":["java"],"tag":["java","i/o"],"sticky":false,"star":false,"description":"PrintStream 是 Java 中用于输出格式化文本的类。它提供了多种方法来将数据输出到控制台或文件，其中 printf 是最常用的方法之一。 printf 方法允许开发者使用格式字符串来控制输出的格式，类似于 C 语言中的 printf 函数。 本文将详细介绍 PrintStream 的 printf 方法及其使用场景。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/javaer/base/%E4%B8%80%E3%80%81Java%E5%9F%BA%E7%A1%80/7.Java%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E6%B5%81/09%20java%20formatting%20output%20or%20printf.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"09. 格式化输出"}],["meta",{"property":"og:description","content":"PrintStream 是 Java 中用于输出格式化文本的类。它提供了多种方法来将数据输出到控制台或文件，其中 printf 是最常用的方法之一。 printf 方法允许开发者使用格式字符串来控制输出的格式，类似于 C 语言中的 printf 函数。 本文将详细介绍 PrintStream 的 printf 方法及其使用场景。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-10T03:15:44.000Z"}],["meta",{"property":"article:author","content":"LiuSongLing"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"i/o"}],["meta",{"property":"article:published_time","content":"2025-01-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-10T03:15:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"09. 格式化输出\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-01-05T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-10T03:15:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LiuSongLing\\"}]}"]]},"headers":[{"level":2,"title":"1. PrintStream 概述","slug":"_1-printstream-概述","link":"#_1-printstream-概述","children":[{"level":3,"title":"1.1 基本用法","slug":"_1-1-基本用法","link":"#_1-1-基本用法","children":[]}]},{"level":2,"title":"2. printf 方法详解","slug":"_2-printf-方法详解","link":"#_2-printf-方法详解","children":[{"level":3,"title":"2.1 常用格式说明符","slug":"_2-1-常用格式说明符","link":"#_2-1-常用格式说明符","children":[]},{"level":3,"title":"2.2 格式化整数","slug":"_2-2-格式化整数","link":"#_2-2-格式化整数","children":[]},{"level":3,"title":"2.3 格式化浮点数","slug":"_2-3-格式化浮点数","link":"#_2-3-格式化浮点数","children":[]},{"level":3,"title":"2.4 格式化日期和时间","slug":"_2-4-格式化日期和时间","link":"#_2-4-格式化日期和时间","children":[]},{"level":3,"title":"2.5 格式化布尔值","slug":"_2-5-格式化布尔值","link":"#_2-5-格式化布尔值","children":[]}]},{"level":2,"title":"3. 使用 PrintStream 输出到文件","slug":"_3-使用-printstream-输出到文件","link":"#_3-使用-printstream-输出到文件","children":[]},{"level":2,"title":"4. 使用 PrintStream 的注意事项","slug":"_4-使用-printstream-的注意事项","link":"#_4-使用-printstream-的注意事项","children":[{"level":3,"title":"4.1 异常处理","slug":"_4-1-异常处理","link":"#_4-1-异常处理","children":[]},{"level":3,"title":"4.2 关闭流","slug":"_4-2-关闭流","link":"#_4-2-关闭流","children":[]}]},{"level":2,"title":"5. 总结","slug":"_5-总结","link":"#_5-总结","children":[]}],"git":{"createdTime":1739157344000,"updatedTime":1739157344000,"contributors":[{"name":"liusongling","email":"15879144378@163.com","commits":1}]},"readingTime":{"minutes":3.86,"words":1157},"filePathRelative":"javaer/base/一、Java基础/7.Java输入输出流/09 java formatting output or printf.md","localizedDate":"2025年1月5日","excerpt":"<p><code>PrintStream</code> 是 Java 中用于输出格式化文本的类。它提供了多种方法来将数据输出到控制台或文件，其中 <code>printf</code> 是最常用的方法之一。</p>\\n<p><code>printf</code> 方法允许开发者使用格式字符串来控制输出的格式，类似于 C 语言中的 <code>printf</code> 函数。</p>\\n<p>本文将详细介绍 <code>PrintStream</code> 的 <code>printf</code> 方法及其使用场景。</p>\\n","autoDesc":true}');export{t as data};
