import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as e,e as p,f as n}from"./app-5cCCUltF.js";const t={},c=n("<p>了解Java中的访问修饰符，这些修饰符用于设置<code>类</code>、<code>变量</code>、<code>方法</code> 和 <code>构造函数</code> 的访问级别。</p><p>简单地说，有四个访问修饰符：<strong>public、private、protected 和 default（无关键字）。</strong></p><p>在我们开始之前，注意，顶级类只能使用 public 或 default 访问修饰符。在成员层面，我们可以使用所有四个。</p>",3),o=n(`<h2 id="_1-default-默认" tabindex="-1"><a class="header-anchor" href="#_1-default-默认" aria-hidden="true">#</a> 1.default(默认)</h2><p>当我们不明确使用任何关键字时，Java将对给定类、方法或属性使用默认访问修饰符。</p><p>默认访问修饰符也称为 <code>package-private</code>，这意味着所有成员都在同一包中可见，但无法从其他包访问：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sky<span class="token punctuation">.</span>accessmodifiers</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SuperPublic</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">defaultMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>defaultMethod() 可以在同一软件包的另一个类中访问：</p><p><br><br><br></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>baeldung<span class="token punctuation">.</span>accessmodifiers</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Public</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">Public</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SuperPublic</span><span class="token punctuation">.</span><span class="token function">defaultMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Available in the same package.</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然而，它在其他软件包中不可用。</p><h2 id="_2-public-公共" tabindex="-1"><a class="header-anchor" href="#_2-public-公共" aria-hidden="true">#</a> 2.public(公共)</h2><p>添加到类、方法或属性中的 <code>pubilic</code> 能让所有软件包中的所有其他类访问<strong>它修饰的类、方法或属性</strong>。</p><p>这是限制最少的访问修饰符：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sky<span class="token punctuation">.</span>accessmodifiers</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SuperPublic</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">publicMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>publicMethod() 在另一个软件包中可用：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sky<span class="token punctuation">.</span>accessmodifiers<span class="token punctuation">.</span>another</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sky<span class="token punctuation">.</span>accessmodifiers<span class="token punctuation">.</span></span><span class="token class-name">SuperPublic</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AnotherPublic</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">AnotherPublic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SuperPublic</span><span class="token punctuation">.</span><span class="token function">publicMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Available everywhere. Let&#39;s note different package.</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-private-私有" tabindex="-1"><a class="header-anchor" href="#_3-private-私有" aria-hidden="true">#</a> 3.private(私有)</h2><p>任何具有 <code>private</code> 关键字的方法、属性或构造函数都<strong>只能从同一类访问。</strong></p><p>这是限制性最强的访问修饰符，也是封装概念的核心。所有数据都将被外界隐藏：</p><p><br><br><br><br><br><br></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sky<span class="token punctuation">.</span>accessmodifiers</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SuperPublic</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">privateMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>
    
     <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">anotherPrivateMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token function">privateMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// available in the same class only.</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-protected-受保护的" tabindex="-1"><a class="header-anchor" href="#_4-protected-受保护的" aria-hidden="true">#</a> 4.protected(受保护的)</h2><p><code>protected(受保护的)</code> 访问修饰符 介于 <code>public</code> 和 <code>private</code> 访问级别之间。</p><p>如果我们使用 <code>protected</code> 的关键字声明方法、属性或构造函数，我们可以从相同的软件包（如软件包私有访问级别）以及从其类的所有子类访问该成员，即使它们位于其他软件包中：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sky<span class="token punctuation">.</span>accessmodifiers</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SuperPublic</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">protectedMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>protectedMethod() 在子类中可用（无论软件包如何）：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>baeldung<span class="token punctuation">.</span>accessmodifiers<span class="token punctuation">.</span>another</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baeldung<span class="token punctuation">.</span>accessmodifiers<span class="token punctuation">.</span></span><span class="token class-name">SuperPublic</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AnotherSubClass</span> <span class="token keyword">extends</span> <span class="token class-name">SuperPublic</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">AnotherSubClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SuperPublic</span><span class="token punctuation">.</span><span class="token function">protectedMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Available in subclass. Let&#39;s note different package.</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><br><br><br><br><br><br></p><h2 id="_5-总结" tabindex="-1"><a class="header-anchor" href="#_5-总结" aria-hidden="true">#</a> 5.总结</h2><table><thead><tr><th>访问控制修饰符</th><th>可见性范围</th><th>类成员访问权限</th></tr></thead><tbody><tr><td><code>public</code></td><td>公共的</td><td>所有类都可以访问，无论它们在哪个包中。</td></tr><tr><td><code>protected</code></td><td>受保护的</td><td>同一包中的类；不同包中该类的子类可以访问。</td></tr><tr><td><code>private</code></td><td>私有的</td><td>仅限于当前类内部访问，子类也无法访问。</td></tr><tr><td><code>default</code></td><td>默认</td><td>同一包中的其他类可以访问，但不同包中的类无法访问，即使它们是子类。</td></tr></tbody></table>`,28);function i(l,u){return a(),e("div",null,[c,p(" more "),o])}const k=s(t,[["render",i],["__file","03 java access modifiers.html.vue"]]);export{k as default};
