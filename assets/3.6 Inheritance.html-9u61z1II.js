const n=JSON.parse('{"key":"v-e284e2d6","path":"/database/pgsql/learning/3.6%20Inheritance.html","title":"3.6 继承","lang":"zh-CN","frontmatter":{"title":"3.6 继承","icon":"pen-to-square","order":1,"author":"LiuSongLing","date":"2024-12-25T00:00:00.000Z","category":["pgsql"],"tag":["pgsql"],"sticky":false,"star":false,"description":"继承是来自面向对象的数据库的一个概念。 现在有两个表：一个表 cities 和一个表 capitals。 当然，首都也是城市，因此在列出所有城市时，您需要某种方式来隐式显示首都。 聪明如你可能会想到： CREATE TABLE capitals ( name text, population real, elevation int, -- (in ft) state char(2) ); CREATE TABLE non_capitals ( name text, population real, elevation int -- (in ft) ); CREATE VIEW cities AS SELECT name, population, elevation FROM capitals UNION SELECT name, population, elevation FROM non_capitals;","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/database/pgsql/learning/3.6%20Inheritance.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"3.6 继承"}],["meta",{"property":"og:description","content":"继承是来自面向对象的数据库的一个概念。 现在有两个表：一个表 cities 和一个表 capitals。 当然，首都也是城市，因此在列出所有城市时，您需要某种方式来隐式显示首都。 聪明如你可能会想到： CREATE TABLE capitals ( name text, population real, elevation int, -- (in ft) state char(2) ); CREATE TABLE non_capitals ( name text, population real, elevation int -- (in ft) ); CREATE VIEW cities AS SELECT name, population, elevation FROM capitals UNION SELECT name, population, elevation FROM non_capitals;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-25T09:24:59.000Z"}],["meta",{"property":"article:author","content":"LiuSongLing"}],["meta",{"property":"article:tag","content":"pgsql"}],["meta",{"property":"article:published_time","content":"2024-12-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-25T09:24:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"3.6 继承\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-12-25T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-25T09:24:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LiuSongLing\\"}]}"]]},"headers":[],"git":{"createdTime":1735118699000,"updatedTime":1735118699000,"contributors":[{"name":"liusongling","email":"15879144378@163.com","commits":1}]},"readingTime":{"minutes":1.73,"words":519},"filePathRelative":"database/pgsql/learning/3.6 Inheritance.md","localizedDate":"2024年12月25日","excerpt":"<p>继承是来自面向对象的数据库的一个概念。</p>\\n<p>现在有两个表：一个表 cities 和一个表 capitals。</p>\\n<p>当然，首都也是城市，因此在列出所有城市时，您需要某种方式来隐式显示首都。</p>\\n<p>聪明如你可能会想到：</p>\\n<div class=\\"language-sql line-numbers-mode\\" data-ext=\\"sql\\"><pre class=\\"language-sql\\"><code><span class=\\"token keyword\\">CREATE</span> <span class=\\"token keyword\\">TABLE</span> capitals <span class=\\"token punctuation\\">(</span>\\n  name       <span class=\\"token keyword\\">text</span><span class=\\"token punctuation\\">,</span>\\n  population <span class=\\"token keyword\\">real</span><span class=\\"token punctuation\\">,</span>\\n  elevation  <span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">,</span>    <span class=\\"token comment\\">-- (in ft)</span>\\n  state      <span class=\\"token keyword\\">char</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">CREATE</span> <span class=\\"token keyword\\">TABLE</span> non_capitals <span class=\\"token punctuation\\">(</span>\\n  name       <span class=\\"token keyword\\">text</span><span class=\\"token punctuation\\">,</span>\\n  population <span class=\\"token keyword\\">real</span><span class=\\"token punctuation\\">,</span>\\n  elevation  <span class=\\"token keyword\\">int</span>     <span class=\\"token comment\\">-- (in ft)</span>\\n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">CREATE</span> <span class=\\"token keyword\\">VIEW</span> cities <span class=\\"token keyword\\">AS</span>\\n  <span class=\\"token keyword\\">SELECT</span> name<span class=\\"token punctuation\\">,</span> population<span class=\\"token punctuation\\">,</span> elevation <span class=\\"token keyword\\">FROM</span> capitals\\n    <span class=\\"token keyword\\">UNION</span>\\n  <span class=\\"token keyword\\">SELECT</span> name<span class=\\"token punctuation\\">,</span> population<span class=\\"token punctuation\\">,</span> elevation <span class=\\"token keyword\\">FROM</span> non_capitals<span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
