import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as t,c as p,e,a as n,b as s,f as o}from"./app-hJ4_2O4c.js";const c={},l=n("p",null,[s("尽管现代Java应用多采用GUI或Web界面，但控制台交互仍是"),n("strong",null,"单元测试"),s("、"),n("strong",null,"运维工具"),s("和"),n("strong",null,"教学演示"),s("的核心场景。")],-1),i=n("p",null,[s("本文将全面解析Java控制台I/O的六大核心技巧，涵盖从基础的"),n("code",null,"Scanner"),s("使用到安全的密码处理等高级话题，并特别针对中文环境下的常见问题进行深度优化。")],-1),u=o(`<h2 id="_1-控制台输入三大法宝" tabindex="-1"><a class="header-anchor" href="#_1-控制台输入三大法宝" aria-hidden="true">#</a> 1.控制台输入三大法宝</h2><h3 id="_1-scanner类-快速开发首选" tabindex="-1"><a class="header-anchor" href="#_1-scanner类-快速开发首选" aria-hidden="true">#</a> 1.Scanner类：快速开发首选</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;请输入您的姓名：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> name <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 读取整行输入</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;请输入年龄：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> age <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">// 自动类型转换</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;您好，%s！%d年后您将年满%d岁%n&quot;</span>， 
    name， <span class="token number">10</span>， age <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

scanner<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 重要！关闭资源防止内存泄漏</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>适用场景</strong>：</p><ul><li>快速原型开发</li><li>需要自动类型转换的简单输入</li></ul><p><strong>中文陷阱</strong>：</p><p>⚠️ 混合使用<code>nextLine()</code>与<code>nextInt()</code>可能导致输入错位：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 错误示例：</span>
<span class="token keyword">int</span> num <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> str <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 此处会读取空行！</span>

<span class="token comment">// 正确做法：</span>
<span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>scanner<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-bufferedreader-高性能读取" tabindex="-1"><a class="header-anchor" href="#_2-bufferedreader-高性能读取" aria-hidden="true">#</a> 2.BufferedReader：高性能读取</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">BufferedReader</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span>
    <span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in， <span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 显式指定中文编码</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;请输入文件路径：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> path <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;您输入的是：&quot;</span> <span class="token operator">+</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
reader<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>性能对比</strong>：</p><table><thead><tr><th>方式</th><th>内存占用</th><th>读取速度</th><th>中文支持</th></tr></thead><tbody><tr><td>Scanner</td><td>较高</td><td>较慢</td><td>需指定编码</td></tr><tr><td>BufferedReader</td><td>低</td><td>快30%+</td><td>默认UTF-8</td></tr></tbody></table><h3 id="_3-system-console-安全密码输入" tabindex="-1"><a class="header-anchor" href="#_3-system-console-安全密码输入" aria-hidden="true">#</a> 3.System.console()：安全密码输入</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Console</span> console <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">console</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>console <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;当前环境不支持控制台！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> password <span class="token operator">=</span> console<span class="token punctuation">.</span><span class="token function">readPassword</span><span class="token punctuation">(</span><span class="token string">&quot;请输入数据库密码：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// 密码以字符数组形式存储，避免字符串驻留风险</span>

console<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;密码长度：%d%n&quot;</span>， password<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>password， <span class="token char">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 立即清空内存中的密码</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>安全规范</strong>：</p><ul><li>必须处理<code>console</code>为null的情况（常见于IDE运行环境）</li><li>使用<code>char[]</code>替代<code>String</code>存储密码</li><li>处理完成后立即覆盖内存数据</li></ul><hr><h2 id="_2-控制台输出进阶技巧" tabindex="-1"><a class="header-anchor" href="#_2-控制台输出进阶技巧" aria-hidden="true">#</a> 2.控制台输出进阶技巧</h2><h3 id="_1-格式化输出-打造专业cli工具" tabindex="-1"><a class="header-anchor" href="#_1-格式化输出-打造专业cli工具" aria-hidden="true">#</a> 1.格式化输出：打造专业CLI工具</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 创建中文表格头</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;|------员工信息表------|&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;| %-6s | %-4s | %-11s |%n&quot;</span>， <span class="token string">&quot;姓名&quot;</span>， <span class="token string">&quot;年龄&quot;</span>， <span class="token string">&quot;手机号&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 模拟数据</span>
<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> employees <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">{</span><span class="token string">&quot;张三&quot;</span>， <span class="token string">&quot;28&quot;</span>， <span class="token string">&quot;13800138000&quot;</span><span class="token punctuation">}</span>，
    <span class="token punctuation">{</span><span class="token string">&quot;李四&quot;</span>， <span class="token string">&quot;35&quot;</span>， <span class="token string">&quot;13912345678&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> emp <span class="token operator">:</span> employees<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;| %-6s | %-4s | %s |%n&quot;</span>， 
        emp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>， 
        emp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>， 
        emp<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">&quot;(\\\\d{3})\\\\d{4}(\\\\d{4})&quot;</span>， <span class="token string">&quot;$1****$2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 手机号脱敏</span>
<span class="token punctuation">}</span>

<span class="token comment">// 输出结果：</span>
<span class="token comment">// |------员工信息表------|</span>
<span class="token comment">// | 姓名   | 年龄 | 手机号      |</span>
<span class="token comment">// | 张三   | 28  | 138****8000 |</span>
<span class="token comment">// | 李四   | 35  | 139****5678 |</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-彩色输出-增强可读性" tabindex="-1"><a class="header-anchor" href="#_2-彩色输出-增强可读性" aria-hidden="true">#</a> 2.彩色输出：增强可读性</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// ANSI颜色代码定义</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConsoleColors</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">RED</span> <span class="token operator">=</span> <span class="token string">&quot;\\033[31m&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">GREEN</span> <span class="token operator">=</span> <span class="token string">&quot;\\033[32m&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">RESET</span> <span class="token operator">=</span> <span class="token string">&quot;\\033[0m&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">ConsoleColors</span><span class="token punctuation">.</span><span class="token constant">RED</span> <span class="token operator">+</span> <span class="token string">&quot;错误：文件未找到！&quot;</span> <span class="token operator">+</span> <span class="token class-name">ConsoleColors</span><span class="token punctuation">.</span><span class="token constant">RESET</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">ConsoleColors</span><span class="token punctuation">.</span><span class="token constant">GREEN</span> <span class="token operator">+</span> <span class="token string">&quot;操作成功完成&quot;</span> <span class="token operator">+</span> <span class="token class-name">ConsoleColors</span><span class="token punctuation">.</span><span class="token constant">RESET</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_3-生产环境最佳实践" tabindex="-1"><a class="header-anchor" href="#_3-生产环境最佳实践" aria-hidden="true">#</a> 3.生产环境最佳实践</h2><h3 id="_1-输入验证框架" tabindex="-1"><a class="header-anchor" href="#_1-输入验证框架" aria-hidden="true">#</a> 1.输入验证框架</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">readNonEmptyInput</span><span class="token punctuation">(</span><span class="token class-name">String</span> prompt， <span class="token class-name">Scanner</span> scanner<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>prompt<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> input <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>input<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> input<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;输入不能为空，请重新输入！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 使用示例</span>
<span class="token class-name">String</span> companyName <span class="token operator">=</span> <span class="token function">readNonEmptyInput</span><span class="token punctuation">(</span><span class="token string">&quot;请输入企业名称：&quot;</span>， scanner<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-异常处理模板" tabindex="-1"><a class="header-anchor" href="#_2-异常处理模板" aria-hidden="true">#</a> 2.异常处理模板</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>
    <span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in， <span class="token string">&quot;GBK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 处理Windows默认编码</span>
    
    <span class="token comment">// 业务逻辑</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InputMismatchException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;错误：输入类型不匹配&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnsupportedEncodingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;不支持的编码格式&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    <span class="token comment">// 资源释放保障</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-日志记录规范" tabindex="-1"><a class="header-anchor" href="#_3-日志记录规范" aria-hidden="true">#</a> 3.日志记录规范</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 使用SLF4J记录控制台操作</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Logger</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">LoggerFactory</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConsoleApp</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">ConsoleApp</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;应用程序启动&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// 核心逻辑</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;运行时异常：&quot;</span>， e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;系统错误，请联系管理员&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_4-常见问题排查指南" tabindex="-1"><a class="header-anchor" href="#_4-常见问题排查指南" aria-hidden="true">#</a> 4.常见问题排查指南</h2><table><thead><tr><th>问题现象</th><th>原因分析</th><th>解决方案</th></tr></thead><tbody><tr><td>中文显示乱码</td><td>控制台编码与程序编码不一致</td><td>启动JVM时添加<code>-Dfile.encoding=UTF-8</code></td></tr><tr><td>密码输入可见</td><td>使用了Scanner.nextLine()</td><td>改用System.console().readPassword()</td></tr><tr><td>输入阻塞无响应</td><td>未关闭前一个输入流</td><td>确保每个输入流只打开一次并及时关闭</td></tr><tr><td>数字输入报InputMismatch</td><td>输入包含非数字字符</td><td>先读取字符串再转换为数字</td></tr></tbody></table><hr><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>Java控制台I/O看似简单，实则需要关注：</p><p>✅ <strong>编码问题</strong>：中文字符处理必须统一编码<br> ✅ <strong>资源管理</strong>：使用try-with-resources自动关闭流<br> ✅ <strong>安全性</strong>：敏感信息采用安全读取方式<br> ✅ <strong>健壮性</strong>：添加输入验证和异常处理</p>`,37);function r(k,d){return t(),p("div",null,[l,i,e(" more "),u])}const b=a(c,[["render",r],["__file","01 read and write user input in java.html.vue"]]);export{b as default};
