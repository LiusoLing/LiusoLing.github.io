const e=JSON.parse('{"key":"v-31109058","path":"/database/pgsql/learning/2.6%20Joins%20Between%20Tables.html","title":"2.6 连接表","lang":"zh-CN","frontmatter":{"title":"2.6 连接表","icon":"pen-to-square","order":1,"author":"LiuSongLing","date":"2024-12-24T00:00:00.000Z","category":["pgsql"],"tag":["pgsql"],"sticky":false,"star":false,"description":"SELECT 语句查询可以一次查询多个表，也可以以同时处理表的多个行的方式访问同一个表。 一次访问多个表（或同一表的多个实例）的查询称为联接查询。它们将一个表中的行与第二个表中的行组合在一起，并使用一个表达式指定要配对的行。 例如，若要返回所有天气记录以及关联城市的位置，数据库需要将 weather 表的每一行的 city 列与 cities 表中所有行的 name 列进行比较，并选择这些值匹配的行对。 这将通过以下查询来实现： SELECT * FROM weather JOIN cities ON city = name;","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/database/pgsql/learning/2.6%20Joins%20Between%20Tables.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"2.6 连接表"}],["meta",{"property":"og:description","content":"SELECT 语句查询可以一次查询多个表，也可以以同时处理表的多个行的方式访问同一个表。 一次访问多个表（或同一表的多个实例）的查询称为联接查询。它们将一个表中的行与第二个表中的行组合在一起，并使用一个表达式指定要配对的行。 例如，若要返回所有天气记录以及关联城市的位置，数据库需要将 weather 表的每一行的 city 列与 cities 表中所有行的 name 列进行比较，并选择这些值匹配的行对。 这将通过以下查询来实现： SELECT * FROM weather JOIN cities ON city = name;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-25T09:24:59.000Z"}],["meta",{"property":"article:author","content":"LiuSongLing"}],["meta",{"property":"article:tag","content":"pgsql"}],["meta",{"property":"article:published_time","content":"2024-12-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-25T09:24:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2.6 连接表\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-12-24T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-25T09:24:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LiuSongLing\\"}]}"]]},"headers":[],"git":{"createdTime":1735118699000,"updatedTime":1735118699000,"contributors":[{"name":"liusongling","email":"15879144378@163.com","commits":1}]},"readingTime":{"minutes":2.14,"words":643},"filePathRelative":"database/pgsql/learning/2.6 Joins Between Tables.md","localizedDate":"2024年12月24日","excerpt":"<p>SELECT 语句查询可以一次查询多个表，也可以以同时处理表的多个行的方式访问同一个表。</p>\\n<p>一次访问多个表（或同一表的多个实例）的查询称为联接查询。它们将一个表中的行与第二个表中的行组合在一起，并使用一个表达式指定要配对的行。</p>\\n<p>例如，若要返回所有天气记录以及关联城市的位置，数据库需要将 weather 表的每一行的 city 列与 cities 表中所有行的 name 列进行比较，并选择这些值匹配的行对。</p>\\n<p>这将通过以下查询来实现：</p>\\n<div class=\\"language-sql line-numbers-mode\\" data-ext=\\"sql\\"><pre class=\\"language-sql\\"><code><span class=\\"token keyword\\">SELECT</span> <span class=\\"token operator\\">*</span> <span class=\\"token keyword\\">FROM</span> weather <span class=\\"token keyword\\">JOIN</span> cities <span class=\\"token keyword\\">ON</span> city <span class=\\"token operator\\">=</span> name<span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
