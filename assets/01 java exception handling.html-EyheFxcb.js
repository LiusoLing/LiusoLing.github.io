import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as p,e as t,a as n,f as e}from"./app-5cCCUltF.js";const c={},o=n("p",null,"异常是程序执行过程中的异常行为。",-1),l=n("p",null,"让我们了解什么是Java异常，以及它们如何帮助我们编写更少容易出错的代码。",-1),i=e(`<h2 id="_1-异常处理" tabindex="-1"><a class="header-anchor" href="#_1-异常处理" aria-hidden="true">#</a> 1.异常处理</h2><h3 id="_1-1-什么是异常处理" tabindex="-1"><a class="header-anchor" href="#_1-1-什么是异常处理" aria-hidden="true">#</a> 1.1 什么是异常处理</h3><p>类比现实，我们在网上购买了一件商品，在快递过程中，出现了意料之外的变故，比如破损、丢件等等意外情况，快递公司是会帮忙处理的，最终确保我们能准时收到包裹。</p><p>同样的，在运行Java 程序时，代码执行指令时可能会遇到错误。良好的异常处理可以处理错误，让我们的程序重新走回正轨，保证用户的积极体验。</p><h3 id="_1-2-为什么要使用异常处理" tabindex="-1"><a class="header-anchor" href="#_1-2-为什么要使用异常处理" aria-hidden="true">#</a> 1.2 为什么要使用异常处理</h3><p>我们的编程环境总是一个 <code>理想</code> 的环境：文件系统是好的，网络是正常无波动的，JVM内存总是足够的。</p><p>这样的编程体验无疑是十分快乐的。</p><p><br><br><br><br></p><p>然而，在生产中，<strong>文件系统可能会损坏，网络可能会崩溃，JVM会耗尽内存。</strong> 我们代码的良好体验取决于它如何处理“不良环境”。</p><p>我们必须处理这些缺陷，因为它们对应用程序的正常运行产生负面影响，并形成异常：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Player</span><span class="token punctuation">&gt;</span></span> <span class="token function">getPlayers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">Path</span> path <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;players.dat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> players <span class="token operator">=</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">readAllLines</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> players<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Player</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此代码选择不处理 <code>IOException</code> ，而是将其传递给调用堆栈。在理想化的环境中，代码工作正常。</p><p>但是，如果缺少 <code>players.dat</code>，生产中可能会发生什么？</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Exception</span> in thread <span class="token string">&quot;main&quot;</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span>NoSuchFileException</span><span class="token operator">:</span> players<span class="token punctuation">.</span>dat <span class="token operator">&lt;</span><span class="token operator">--</span> players<span class="token punctuation">.</span>dat file doesn&#39;t exist
    at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>fs<span class="token punctuation">.</span></span>WindowsException</span><span class="token punctuation">.</span><span class="token function">translateToIOException</span><span class="token punctuation">(</span><span class="token class-name">Unknown</span> <span class="token class-name">Source</span><span class="token punctuation">)</span>
    at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>fs<span class="token punctuation">.</span></span>WindowsException</span><span class="token punctuation">.</span><span class="token function">rethrowAsIOException</span><span class="token punctuation">(</span><span class="token class-name">Unknown</span> <span class="token class-name">Source</span><span class="token punctuation">)</span>
    <span class="token comment">// ... more stack trace</span>
    at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span>Files</span><span class="token punctuation">.</span><span class="token function">readAllLines</span><span class="token punctuation">(</span><span class="token class-name">Unknown</span> <span class="token class-name">Source</span><span class="token punctuation">)</span>
    at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span>Files</span><span class="token punctuation">.</span><span class="token function">readAllLines</span><span class="token punctuation">(</span><span class="token class-name">Unknown</span> <span class="token class-name">Source</span><span class="token punctuation">)</span>
    at <span class="token class-name">Exceptions</span><span class="token punctuation">.</span><span class="token function">getPlayers</span><span class="token punctuation">(</span><span class="token class-name">Exceptions</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span><span class="token operator">--</span> <span class="token class-name">Exception</span> arises in <span class="token function">getPlayers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> method<span class="token punctuation">,</span> on line <span class="token number">12</span>
    at <span class="token class-name">Exceptions</span><span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">Exceptions</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">19</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span><span class="token operator">--</span> <span class="token function">getPlayers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> is called by <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> on line <span class="token number">19</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>如果不处理这个异常，一个健康的程序可能会完全停止运行！</strong> 我们需要确保我们的代码在出现问题时有一个兜底计划。</p><p><br><br><br><br></p><p>另请注意，这里对异常还有一个好处，那就是堆栈跟踪本身。由于这种堆栈跟踪，我们通常可以快速确定违规代码，而无需使用调试器逐行调试。</p>`,17);function u(k,r){return a(),p("div",null,[o,l,t(" more "),i])}const v=s(c,[["render",u],["__file","01 java exception handling.html.vue"]]);export{v as default};
