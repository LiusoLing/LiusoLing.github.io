import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as n,o as d,c,e as h,a,b as e,d as s,f as o}from"./app-O6B6fb-J.js";const i={},p=a("p",null,"在本文章中，学习字符编码的基础知识以及我们如何在Java中处理它。",-1),_=o('<h2 id="字符编码的重要性" tabindex="-1"><a class="header-anchor" href="#字符编码的重要性" aria-hidden="true">#</a> 字符编码的重要性</h2><p>世界上的语言多种多样，我们经常不得不处理属于多种语言的文本，如汉语或英语。</p><p>每种语言中的每个字符都需要以某种方式映射到一组二进制数据 0 和 1。维护映射关系的，就叫做字符编码。</p><p>关键术语：<code>编码、字符集、代码点</code></p><h3 id="_1-编码" tabindex="-1"><a class="header-anchor" href="#_1-编码" aria-hidden="true">#</a> 1.编码</h3><p>计算机只能理解像1和0这样的二进制表示。处理任何其他内容都需要从现实世界文本到其二进制表示的某种映射。</p><p>这种映射是我们所知道的字符编码或编码。</p><p>例如，字母 “T” 在 <code>US-ASCII</code> 中编码为 <code>01010100</code>。</p><h3 id="_2-字符集" tabindex="-1"><a class="header-anchor" href="#_2-字符集" aria-hidden="true">#</a> 2.字符集</h3><p>字符到其二进制表示的映射在它们所包含的字符方面可能差异很大。</p><p>映射中包含的字符数可以从少数字符到实际使用的所有字符不等。映射定义中包含的字符集正式称为字符集。</p>',11),l={href:"http://ee.hawaii.edu/~tep/EE160/Book/chap4/subsection2.1.1.1.html",target:"_blank",rel:"noopener noreferrer"},f=o('<h3 id="_3-代码点" tabindex="-1"><a class="header-anchor" href="#_3-代码点" aria-hidden="true">#</a> 3.代码点</h3><p>代码点是将字符与其实际编码分开的抽象。代码点是对特定字符的整数引用。</p><p>我们可以用普通小数或备用基数（如十六进制或八进制）表示整数本身。为了便于引用大数字，我们使用备用基础。</p><p>例如，字母T在 <code>Unicode</code> 中有一个代码点 <code>U+0054</code>（或十进制为84）。</p><h2 id="几种流行的编码方案" tabindex="-1"><a class="header-anchor" href="#几种流行的编码方案" aria-hidden="true">#</a> 几种流行的编码方案</h2><p>略，有空再补充</p>',6);function m(u,x){const r=n("ExternalLinkIcon");return d(),c("div",null,[p,h(" more "),_,a("p",null,[e("例如，"),a("a",l,[e("ASCII"),s(r)]),e("的字符集为128个字符。")]),f])}const v=t(i,[["render",m],["__file","09 java string encode.html.vue"]]);export{v as default};
