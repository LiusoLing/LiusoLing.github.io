import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as p,e,a as n,f as t}from"./app-LeoV-3ht.js";const c={},o=n("p",null,"在本文中，我们将非常简要地了解什么是异常，并深入讨论Java中的链式异常。",-1),l=n("p",null,"简而言之，异常是扰乱程序正常执行流程的事件。现在让我们看看如何将异常链接起来，以从中获得更好的语义。",-1),i=t(`<h2 id="_1-链式异常" tabindex="-1"><a class="header-anchor" href="#_1-链式异常" aria-hidden="true">#</a> 1.链式异常</h2><p>链式异常有助于识别一个异常导致应用程序中另一个异常的情况。</p><p>例如，考虑一种方法，该方法由于试图除以零而抛出ArithmeticException，但异常的实际原因是I/O错误，导致除数为零。</p><p>该方法将向调用者抛出ArithmeticException。来电者不知道异常的实际原因。在这种情况下使用ChainedException。</p><p>这个概念是在JDK 1.4中引入的。</p><p>让我们看看Java如何支持链式异常。</p><p><br><br><br><br></p><h2 id="_2-可抛类" tabindex="-1"><a class="header-anchor" href="#_2-可抛类" aria-hidden="true">#</a> 2.可抛类</h2><p>可抛类有一些构造函数和方法来支持链式异常。首先，让我们看看构造函数。</p><ul><li>Throwable（Throwable cause）-Throwable有一个参数，它指定了异常的实际原因。</li><li>Throwable（String desc，Throwable cause）-此构造函数也接受带有异常实际原因的异常描述。</li></ul><p>接下来，让我们看看这个类提供的方法：</p><ul><li>getCause()方法-此方法返回与当前异常相关联的实际原因。</li><li>initCause()方法-它通过调用异常设置一个底层原因。</li></ul><h2 id="_3-示例" tabindex="-1"><a class="header-anchor" href="#_3-示例" aria-hidden="true">#</a> 3.示例</h2><p>现在，让我们看看示例，我们将设置自己的异常描述并抛出一个链式异常：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyChainedException</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ArithmeticException</span><span class="token punctuation">(</span><span class="token string">&quot;Top Level Exception.&quot;</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">initCause</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">IOException</span><span class="token punctuation">(</span><span class="token string">&quot;IO cause.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">ArithmeticException</span> ae<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Caught : &quot;</span> <span class="token operator">+</span> ae<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Actual cause: &quot;</span><span class="token operator">+</span> ae<span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>正如猜测的那样，这将导致：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Caught</span><span class="token operator">:</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>ArithmeticException</span><span class="token operator">:</span> <span class="token class-name">Top</span> <span class="token class-name">Level</span> <span class="token class-name">Exception<span class="token punctuation">.</span>
Actual</span> cause<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>IOException</span><span class="token operator">:</span> <span class="token constant">IO</span> cause<span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-1-不连锁异常" tabindex="-1"><a class="header-anchor" href="#_3-1-不连锁异常" aria-hidden="true">#</a> 3.1 不连锁异常</h3><p>首先，我们将创建一系列例外：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">NoLeaveGrantedException</span> <span class="token keyword">extends</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">NoLeaveGrantedException</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> cause<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> cause<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">NoLeaveGrantedException</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">TeamLeadUpsetException</span> <span class="token keyword">extends</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">// Both Constructors</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在，让我们开始在代码示例中使用上述异常：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainClass</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token function">getLeave</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">void</span> <span class="token function">getLeave</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NoLeaveGrantedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">howIsTeamLead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">TeamLeadUpsetException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoLeaveGrantedException</span><span class="token punctuation">(</span><span class="token string">&quot;Leave not sanctioned.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">void</span> <span class="token function">howIsTeamLead</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">TeamLeadUpsetException</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TeamLeadUpsetException</span><span class="token punctuation">(</span><span class="token string">&quot;Team Lead Upset&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的示例中，日志将看起来像这样：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>baeldung<span class="token punctuation">.</span>chainedexception<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span></span>TeamLeadUpsetException</span><span class="token operator">:</span> 
  <span class="token class-name">Team</span> lead <span class="token class-name">Upset</span>
    at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>baeldung<span class="token punctuation">.</span>chainedexception<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span></span>MainClass</span>
      <span class="token punctuation">.</span><span class="token function">howIsTeamLead</span><span class="token punctuation">(</span><span class="token class-name">MainClass</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">46</span><span class="token punctuation">)</span>
    at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>baeldung<span class="token punctuation">.</span>chainedexception<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span></span>MainClass</span>
      <span class="token punctuation">.</span><span class="token function">getLeave</span><span class="token punctuation">(</span><span class="token class-name">MainClass</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">34</span><span class="token punctuation">)</span>
    at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>baeldung<span class="token punctuation">.</span>chainedexception<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span></span>MainClass</span>
      <span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">MainClass</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">29</span><span class="token punctuation">)</span>
<span class="token class-name">Exception</span> in thread <span class="token string">&quot;main&quot;</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>baeldung<span class="token punctuation">.</span>chainedexception<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span></span>
  NoLeaveGrantedException</span><span class="token operator">:</span> <span class="token class-name">Leave</span> not sanctioned<span class="token punctuation">.</span>
    at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>baeldung<span class="token punctuation">.</span>chainedexception<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span></span>MainClass</span>
      <span class="token punctuation">.</span><span class="token function">getLeave</span><span class="token punctuation">(</span><span class="token class-name">MainClass</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">37</span><span class="token punctuation">)</span>
    at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>baeldung<span class="token punctuation">.</span>chainedexception<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span></span>MainClass</span>
      <span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">MainClass</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">29</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-连锁异常" tabindex="-1"><a class="header-anchor" href="#_3-2-连锁异常" aria-hidden="true">#</a> 3.2 连锁异常</h3><p>链式异常：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainClass</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token function">getLeave</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">getLeave</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NoLeaveGrantedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">howIsTeamLead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">TeamLeadUpsetException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
             <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoLeaveGrantedException</span><span class="token punctuation">(</span><span class="token string">&quot;Leave not sanctioned.&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">howIsTeamLead</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">TeamLeadUpsetException</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TeamLeadUpsetException</span><span class="token punctuation">(</span><span class="token string">&quot;Team lead Upset.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>让我们看看通过链式异常获得的日志：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Exception</span> in thread <span class="token string">&quot;main&quot;</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>baeldung<span class="token punctuation">.</span>chainedexception<span class="token punctuation">.</span>exceptions
  <span class="token punctuation">.</span></span>NoLeaveGrantedException</span><span class="token operator">:</span> <span class="token class-name">Leave</span> not sanctioned<span class="token punctuation">.</span> 
    at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>baeldung<span class="token punctuation">.</span>chainedexception<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span></span>MainClass</span>
      <span class="token punctuation">.</span><span class="token function">getLeave</span><span class="token punctuation">(</span><span class="token class-name">MainClass</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">36</span><span class="token punctuation">)</span> 
    at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>baeldung<span class="token punctuation">.</span>chainedexception<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span></span>MainClass</span>
      <span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">MainClass</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">29</span><span class="token punctuation">)</span> 
<span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>baeldung<span class="token punctuation">.</span>chainedexception<span class="token punctuation">.</span>exceptions
  <span class="token punctuation">.</span></span>TeamLeadUpsetException</span><span class="token operator">:</span> <span class="token class-name">Team</span> lead <span class="token class-name">Upset</span><span class="token punctuation">.</span>
    at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>baeldung<span class="token punctuation">.</span>chainedexception<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span></span>MainClass</span>
  <span class="token punctuation">.</span><span class="token function">howIsTeamLead</span><span class="token punctuation">(</span><span class="token class-name">MainClass</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">44</span><span class="token punctuation">)</span> 
    at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>baeldung<span class="token punctuation">.</span>chainedexception<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span></span>MainClass</span>
  <span class="token punctuation">.</span><span class="token function">getLeave</span><span class="token punctuation">(</span><span class="token class-name">MainClass</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">34</span><span class="token punctuation">)</span> 
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">1</span> more
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以很容易地比较显示的日志，并得出结论，链式异常会导致更干净的日志。</p>`,30);function u(k,d){return a(),p("div",null,[o,l,e(" more "),i])}const m=s(c,[["render",u],["__file","03 java chain exception.html.vue"]]);export{m as default};
