const t=JSON.parse('{"key":"v-259bf0ed","path":"/javaer/base/%E4%B8%80%E3%80%81Java%E5%9F%BA%E7%A1%80/6.Java%E9%9B%86%E5%90%88/01%20java%20array%20list.html","title":"01. ArrayList","lang":"zh-CN","frontmatter":{"title":"01. ArrayList","icon":"pen-to-square","order":1,"author":"LiuSongLing","date":"2025-01-03T00:00:00.000Z","category":["java"],"tag":["java","list"],"sticky":false,"star":false,"description":"ArrayList 是一个构建在数组之上的 List 实现，它可以在我们 添加/删除 元素时动态的增长和收缩，我们可以通过索引来访问元素： 随机访问时间复杂度为 O(1) 次 添加一个元素的均摊时间复杂度为 O(1) 插入/删除元素的时间复杂度为 O(n) 对于未排序的数组，搜索需要 O(n) 时间，已排序的，搜索需要 O(log n)时间","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/javaer/base/%E4%B8%80%E3%80%81Java%E5%9F%BA%E7%A1%80/6.Java%E9%9B%86%E5%90%88/01%20java%20array%20list.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"01. ArrayList"}],["meta",{"property":"og:description","content":"ArrayList 是一个构建在数组之上的 List 实现，它可以在我们 添加/删除 元素时动态的增长和收缩，我们可以通过索引来访问元素： 随机访问时间复杂度为 O(1) 次 添加一个元素的均摊时间复杂度为 O(1) 插入/删除元素的时间复杂度为 O(n) 对于未排序的数组，搜索需要 O(n) 时间，已排序的，搜索需要 O(log n)时间"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-08T10:32:24.000Z"}],["meta",{"property":"article:author","content":"LiuSongLing"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"list"}],["meta",{"property":"article:published_time","content":"2025-01-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-08T10:32:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"01. ArrayList\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-01-03T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-08T10:32:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LiuSongLing\\"}]}"]]},"headers":[{"level":2,"title":"1.创建 ArrayList","slug":"_1-创建-arraylist","link":"#_1-创建-arraylist","children":[]},{"level":2,"title":"2.添加元素","slug":"_2-添加元素","link":"#_2-添加元素","children":[]},{"level":2,"title":"3.迭代","slug":"_3-迭代","link":"#_3-迭代","children":[]},{"level":2,"title":"4.查找","slug":"_4-查找","link":"#_4-查找","children":[]},{"level":2,"title":"5.搜索排序","slug":"_5-搜索排序","link":"#_5-搜索排序","children":[]},{"level":2,"title":"6.删除元素","slug":"_6-删除元素","link":"#_6-删除元素","children":[]},{"level":2,"title":"7.其他方法","slug":"_7-其他方法","link":"#_7-其他方法","children":[]}],"git":{"createdTime":1739009362000,"updatedTime":1739010744000,"contributors":[{"name":"liusongling","email":"15879144378@163.com","commits":2}]},"readingTime":{"minutes":4.45,"words":1336},"filePathRelative":"javaer/base/一、Java基础/6.Java集合/01 java array list.md","localizedDate":"2025年1月3日","excerpt":"<p>ArrayList 是一个构建在数组之上的 List 实现，它可以在我们 添加/删除 元素时动态的增长和收缩，我们可以通过索引来访问元素：</p>\\n<ul>\\n<li>随机访问时间复杂度为 O(1) 次</li>\\n<li>添加一个元素的均摊时间复杂度为 O(1)</li>\\n<li>插入/删除元素的时间复杂度为 O(n)</li>\\n<li>对于未排序的数组，搜索需要 O(n) 时间，已排序的，搜索需要 O(log n)时间</li>\\n</ul>\\n","autoDesc":true}');export{t as data};
