import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as t,e as p,a as n,f as o}from"./app-c0qboIoH.js";const c={},e=n("p",null,"在本文章中，学习如何使用不同方式在Java中比较字符串。",-1),u=n("p",null,"由于String是Java中最常用的数据类型之一，这自然是一个非常常用的操作。",-1),l=o(`<h2 id="字符串与字符串类的比较" tabindex="-1"><a class="header-anchor" href="#字符串与字符串类的比较" aria-hidden="true">#</a> 字符串与字符串类的比较</h2><h3 id="_1-使用-比较运算符" tabindex="-1"><a class="header-anchor" href="#_1-使用-比较运算符" aria-hidden="true">#</a> 1.使用“==”比较运算符</h3><p>使用 <code>==</code> 运算符比较文本值是Java初学者最常见的错误之一。</p><p>这是错误的，因为 <code>==</code> 只检查两个字符串的引用地址是否相同，而不比较它们的内容。</p><p>看一个 <code>==</code> 运算符比较示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> string1 <span class="token operator">=</span> <span class="token string">&quot;using comparison operator&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> string2 <span class="token operator">=</span> <span class="token string">&quot;using comparison operator&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> string3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">&quot;using comparison operator&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token function">assertThat</span><span class="token punctuation">(</span>string1 <span class="token operator">==</span> string2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 断言为真</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>string1 <span class="token operator">==</span> string3<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isFalse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 断言为假</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第一个断言为真，因为两个变量指向相同的字符串文字。</p><p>第二个断言为假，因为 string1 是用文字创建的，而 string3 是使用 new 运算符创建的，因此它们引用了不同的对象。</p><h3 id="_2-使用equals-方法" tabindex="-1"><a class="header-anchor" href="#_2-使用equals-方法" aria-hidden="true">#</a> 2.使用equals()方法</h3><p><code>String</code> 类重写了从 <code>Object</code> 继承的 <code>equals()</code>。该方法逐个字符比较两个字符串，忽略它们的地址。</p><p>如果它们长度相同，字符顺序相同，则认为它们相等，这才是正确的字符串比较方法：</p><p>看一个 <code>equal()</code> 示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> string1 <span class="token operator">=</span> <span class="token string">&quot;using equals method&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> string2 <span class="token operator">=</span> <span class="token string">&quot;using equals method&quot;</span><span class="token punctuation">;</span>
        
<span class="token class-name">String</span> string3 <span class="token operator">=</span> <span class="token string">&quot;using EQUALS method&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> string4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">&quot;using equals method&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">assertThat</span><span class="token punctuation">(</span>string1<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>string2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 断言为真</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>string1<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>string4<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 断言为真</span>

<span class="token function">assertThat</span><span class="token punctuation">(</span>string1<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isFalse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 断言为假</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>string1<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>string3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isFalse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 断言为真</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>string1</code>、<code>string2</code> 和 <code>string4</code> 变量是相等的，因为它们具有相同的大小写和值，无论其引用地址如何。</p><p>而比较的两个字符串，任意一个为null，都返回false。</p><h3 id="_3-使用-equalsignorecase-方法" tabindex="-1"><a class="header-anchor" href="#_3-使用-equalsignorecase-方法" aria-hidden="true">#</a> 3.使用 equalsIgnoreCase()方法</h3><p>equalsIgnoreCase()方法返回一个布尔值。顾名思义，此方法在比较字符串时忽略了字符大小写：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> string1 <span class="token operator">=</span> <span class="token string">&quot;using equals ignore case&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> string2 <span class="token operator">=</span> <span class="token string">&quot;USING EQUALS IGNORE CASE&quot;</span><span class="token punctuation">;</span>

<span class="token function">assertThat</span><span class="token punctuation">(</span>string1<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>string2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-使用-compareto-方法" tabindex="-1"><a class="header-anchor" href="#_4-使用-compareto-方法" aria-hidden="true">#</a> 4.使用 compareTo()方法</h3><p>compareTo()方法返回一个int类型值，并根据字典或自然顺序按字符词典比较两个字符串字符。</p><p>如果两个字符串相等，则返回0，如果第一个字符串在参数之前，则返回负数，如果第一个字符串在参数字符串之后，则返回大于零的数字。</p><p>看一个 <code>compareTo()</code> 示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> author <span class="token operator">=</span> <span class="token string">&quot;author&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> book <span class="token operator">=</span> <span class="token string">&quot;book&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> duplicateBook <span class="token operator">=</span> <span class="token string">&quot;book&quot;</span><span class="token punctuation">;</span>

<span class="token function">assertThat</span><span class="token punctuation">(</span>author<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>book<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEqualTo</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>author<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEqualTo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>duplicateBook<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>book<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEqualTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-使用-comparetoignorecase-方法" tabindex="-1"><a class="header-anchor" href="#_5-使用-comparetoignorecase-方法" aria-hidden="true">#</a> 5.使用 compareToIgnoreCase()方法</h3><p><code>compareToIgnoreCase()</code> 与 <code>compreTo()</code> 方法相似，只是它忽略了大小写：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> author <span class="token operator">=</span> <span class="token string">&quot;Author&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> book <span class="token operator">=</span> <span class="token string">&quot;book&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> duplicateBook <span class="token operator">=</span> <span class="token string">&quot;BOOK&quot;</span><span class="token punctuation">;</span>

<span class="token function">assertThat</span><span class="token punctuation">(</span>author<span class="token punctuation">.</span><span class="token function">compareToIgnoreCase</span><span class="token punctuation">(</span>book<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEqualTo</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span><span class="token function">compareToIgnoreCase</span><span class="token punctuation">(</span>author<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEqualTo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>duplicateBook<span class="token punctuation">.</span><span class="token function">compareToIgnoreCase</span><span class="token punctuation">(</span>book<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEqualTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="objects类的equals-方法字符串比较" tabindex="-1"><a class="header-anchor" href="#objects类的equals-方法字符串比较" aria-hidden="true">#</a> Objects类的equals()方法字符串比较</h2><p><code>Objects</code> 类包含一个 <code>equals()</code> 的静态方法，在比较字符串时非常有用。</p><p>如果两个字符串相等，则该方法返回true，首先使用其地址（即“==”）进行比较。因此，如果两个参数都是空的，则返回true，如果恰好一个参数为空，则返回false。</p><p>否则，它只需调用传递的参数类型类的equals()方法（如果传入的是 String 类型，即调用 String 内部的 equals 方法）：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> string1 <span class="token operator">=</span> <span class="token string">&quot;using objects equals&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> string2 <span class="token operator">=</span> <span class="token string">&quot;using objects equals&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> string3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">&quot;using objects equals&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>string1<span class="token punctuation">,</span> string2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>string1<span class="token punctuation">,</span> string3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> string1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isFalse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="apache-commons方法字符串比较" tabindex="-1"><a class="header-anchor" href="#apache-commons方法字符串比较" aria-hidden="true">#</a> Apache Commons方法字符串比较</h2><p><code>Apache Commons</code> 库包含一个名为 <code>StringUtils</code> 的实用工具类，用于与字符串相关的操作；</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;equals method&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isFalse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;equals method&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;equals method&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;equals method&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;EQUALS METHOD&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isFalse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token string">&quot;equals method&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;equals method&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token string">&quot;equals method&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;EQUALS METHOD&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>equalsAny()</code> 方法的第一个参数是 <code>String</code>，第二个是 <code>args</code> 类型 <code>CharSequence</code>。</p><p>任何其他给定的字符串与第一个字符串大小写匹配，则该方法返回true，否则，返回false：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">equalsAny</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">equalsAny</span><span class="token punctuation">(</span><span class="token string">&quot;equals any&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;equals any&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;any&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">equalsAny</span><span class="token punctuation">(</span><span class="token string">&quot;equals any&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;equals any&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">equalsAny</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;equals&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;any&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isFalse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">equalsAny</span><span class="token punctuation">(</span><span class="token string">&quot;equals any&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;EQUALS ANY&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ANY&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isFalse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">equalsAnyIgnoreCase</span><span class="token punctuation">(</span><span class="token string">&quot;ignore case&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;IGNORE CASE&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;any&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>StringUtils\`\` 类中的 </code>compare()\`\` 方法是 String 类 compareTo() 方法的空安全版本，通过考虑小于非空值的null来处理空值。</p><p>两个null值被认为是相等的：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEqualTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEqualTo</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bbc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEqualTo</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span><span class="token string">&quot;bbc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEqualTo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">compareIgnoreCase</span><span class="token punctuation">(</span><span class="token string">&quot;Abc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bbc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEqualTo</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">compareIgnoreCase</span><span class="token punctuation">(</span><span class="token string">&quot;bbc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ABC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEqualTo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">compareIgnoreCase</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ABC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEqualTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,40);function i(k,r){return a(),t("div",null,[e,u,p(" more "),l])}const g=s(c,[["render",i],["__file","04 java compare string.html.vue"]]);export{g as default};
